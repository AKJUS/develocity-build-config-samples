plugins {
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'signing'
    id 'com.gradle.plugin-publish' version '0.12.0'
}

group = 'com.gradle'
version = '1.1.1'

repositories {
    gradlePluginPortal()
}

dependencies {
    compileOnly 'com.gradle:gradle-enterprise-gradle-plugin:3.5.1'
}

// Translate CI variables to project properties used for publishing
ext['gradle.publish.key'] = findProperty('gradlePublishKey')
ext['gradle.publish.secret'] = findProperty('gradlePublishSecret')

gradlePlugin {
    plugins {
        commonCustomUserData {
            id = 'com.gradle.common-custom-user-data-gradle-plugin'
            displayName = 'Gradle Enterprise Common Custom User Data Gradle Plugin'
            description = 'A Gradle plugin to capture common custom user data used for Gradle Build Scans in Gradle Enterprise'
            implementationClass = 'com.gradle.CommonCustomUserDataGradlePlugin'
        }
    }
}

pluginBundle {
    website = "https://github.com/gradle/gradle-enterprise-build-config-samples/tree/master/common-custom-user-data-gradle-plugin"
    vcsUrl = "https://github.com/gradle/gradle-enterprise-build-config-samples.git"
    tags = ["gradle", "gradle enterprise"]
}

signing {
    // Require publications to be signed on CI. Otherwise, publication will be signed only if keys are provided.
    required System.getenv().containsKey("CI")
    useInMemoryPgpKeys(System.getenv("PGP_SIGNING_KEY"), System.getenv("PGP_SIGNING_KEY_PASSPHRASE"))

    sign(configurations.archives)
}